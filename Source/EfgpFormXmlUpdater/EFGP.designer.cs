#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace EfgpFormXmlUpdater
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EFGP")]
	public partial class EFGPDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 擴充性方法定義
    partial void OnCreated();
    partial void InsertFormInstance(FormInstance instance);
    partial void UpdateFormInstance(FormInstance instance);
    partial void DeleteFormInstance(FormInstance instance);
    partial void InsertProcessInstance(ProcessInstance instance);
    partial void UpdateProcessInstance(ProcessInstance instance);
    partial void DeleteProcessInstance(ProcessInstance instance);
    partial void InsertLocalRelevantData(LocalRelevantData instance);
    partial void UpdateLocalRelevantData(LocalRelevantData instance);
    partial void DeleteLocalRelevantData(LocalRelevantData instance);
    #endregion
		
		public EFGPDataContext() : 
				base(global::EfgpFormXmlUpdater.Properties.Settings.Default.EFGPConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EFGPDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EFGPDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EFGPDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EFGPDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FormInstance> FormInstance
		{
			get
			{
				return this.GetTable<FormInstance>();
			}
		}
		
		public System.Data.Linq.Table<ProcessInstance> ProcessInstance
		{
			get
			{
				return this.GetTable<ProcessInstance>();
			}
		}
		
		public System.Data.Linq.Table<LocalRelevantData> LocalRelevantData
		{
			get
			{
				return this.GetTable<LocalRelevantData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FormInstance")]
	public partial class FormInstance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OID;
		
		private string _creatorOID;
		
		private string _definitionOID;
		
		private string _fieldValues;
		
		private string _signedFieldValues;
		
		private int _objectVersion;
		
		private string _serialNumber;
		
		private string _maskFieldValues;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(string value);
    partial void OnOIDChanged();
    partial void OncreatorOIDChanging(string value);
    partial void OncreatorOIDChanged();
    partial void OndefinitionOIDChanging(string value);
    partial void OndefinitionOIDChanged();
    partial void OnfieldValuesChanging(string value);
    partial void OnfieldValuesChanged();
    partial void OnsignedFieldValuesChanging(string value);
    partial void OnsignedFieldValuesChanged();
    partial void OnobjectVersionChanging(int value);
    partial void OnobjectVersionChanged();
    partial void OnserialNumberChanging(string value);
    partial void OnserialNumberChanged();
    partial void OnmaskFieldValuesChanging(string value);
    partial void OnmaskFieldValuesChanged();
    #endregion
		
		public FormInstance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_creatorOID", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string creatorOID
		{
			get
			{
				return this._creatorOID;
			}
			set
			{
				if ((this._creatorOID != value))
				{
					this.OncreatorOIDChanging(value);
					this.SendPropertyChanging();
					this._creatorOID = value;
					this.SendPropertyChanged("creatorOID");
					this.OncreatorOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_definitionOID", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string definitionOID
		{
			get
			{
				return this._definitionOID;
			}
			set
			{
				if ((this._definitionOID != value))
				{
					this.OndefinitionOIDChanging(value);
					this.SendPropertyChanging();
					this._definitionOID = value;
					this.SendPropertyChanged("definitionOID");
					this.OndefinitionOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fieldValues", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string fieldValues
		{
			get
			{
				return this._fieldValues;
			}
			set
			{
				if ((this._fieldValues != value))
				{
					this.OnfieldValuesChanging(value);
					this.SendPropertyChanging();
					this._fieldValues = value;
					this.SendPropertyChanged("fieldValues");
					this.OnfieldValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_signedFieldValues", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string signedFieldValues
		{
			get
			{
				return this._signedFieldValues;
			}
			set
			{
				if ((this._signedFieldValues != value))
				{
					this.OnsignedFieldValuesChanging(value);
					this.SendPropertyChanging();
					this._signedFieldValues = value;
					this.SendPropertyChanged("signedFieldValues");
					this.OnsignedFieldValuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectVersion", DbType="Int NOT NULL")]
		public int objectVersion
		{
			get
			{
				return this._objectVersion;
			}
			set
			{
				if ((this._objectVersion != value))
				{
					this.OnobjectVersionChanging(value);
					this.SendPropertyChanging();
					this._objectVersion = value;
					this.SendPropertyChanged("objectVersion");
					this.OnobjectVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serialNumber", DbType="NVarChar(50)")]
		public string serialNumber
		{
			get
			{
				return this._serialNumber;
			}
			set
			{
				if ((this._serialNumber != value))
				{
					this.OnserialNumberChanging(value);
					this.SendPropertyChanging();
					this._serialNumber = value;
					this.SendPropertyChanged("serialNumber");
					this.OnserialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maskFieldValues", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string maskFieldValues
		{
			get
			{
				return this._maskFieldValues;
			}
			set
			{
				if ((this._maskFieldValues != value))
				{
					this.OnmaskFieldValuesChanging(value);
					this.SendPropertyChanging();
					this._maskFieldValues = value;
					this.SendPropertyChanged("maskFieldValues");
					this.OnmaskFieldValuesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProcessInstance")]
	public partial class ProcessInstance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OID;
		
		private int _objectVersion;
		
		private string _contextOID;
		
		private int _currentState;
		
		private string _invokeOrganizationUnitOID;
		
		private string _requesterOID;
		
		private string _serialNumber;
		
		private int _isMain;
		
		private System.DateTime _createdTime;
		
		private string _processInstanceName;
		
		private string _processDefinitionId;
		
		private string _relationalManOID;
		
		private int _defaultAssignmentType;
		
		private string _referContainerOID;
		
		private int _numOfNotification;
		
		private string _subject;
		
		private string _referOrganizationUnitOID;
		
		private string _abortComment;
		
		private int _abortable;
		
		private string _bundleContainer;
		
		private string _abortedManOID;
		
		private int _abortedManType;
		
		private int _sysIntegratedWith;
		
		private string _insLevelOID;
		
		private System.Nullable<System.DateTime> _dueDate;
		
		private int _additionalRules;
		
		private System.Nullable<System.DateTime> _lastNoticeTime;
		
		private string _redefinableHeaderOID;
		
		private int _mobilityProcess;
		
		private string _processModel;
		
		private System.Nullable<int> _isExistCritical;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(string value);
    partial void OnOIDChanged();
    partial void OnobjectVersionChanging(int value);
    partial void OnobjectVersionChanged();
    partial void OncontextOIDChanging(string value);
    partial void OncontextOIDChanged();
    partial void OncurrentStateChanging(int value);
    partial void OncurrentStateChanged();
    partial void OninvokeOrganizationUnitOIDChanging(string value);
    partial void OninvokeOrganizationUnitOIDChanged();
    partial void OnrequesterOIDChanging(string value);
    partial void OnrequesterOIDChanged();
    partial void OnserialNumberChanging(string value);
    partial void OnserialNumberChanged();
    partial void OnisMainChanging(int value);
    partial void OnisMainChanged();
    partial void OncreatedTimeChanging(System.DateTime value);
    partial void OncreatedTimeChanged();
    partial void OnprocessInstanceNameChanging(string value);
    partial void OnprocessInstanceNameChanged();
    partial void OnprocessDefinitionIdChanging(string value);
    partial void OnprocessDefinitionIdChanged();
    partial void OnrelationalManOIDChanging(string value);
    partial void OnrelationalManOIDChanged();
    partial void OndefaultAssignmentTypeChanging(int value);
    partial void OndefaultAssignmentTypeChanged();
    partial void OnreferContainerOIDChanging(string value);
    partial void OnreferContainerOIDChanged();
    partial void OnnumOfNotificationChanging(int value);
    partial void OnnumOfNotificationChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnreferOrganizationUnitOIDChanging(string value);
    partial void OnreferOrganizationUnitOIDChanged();
    partial void OnabortCommentChanging(string value);
    partial void OnabortCommentChanged();
    partial void OnabortableChanging(int value);
    partial void OnabortableChanged();
    partial void OnbundleContainerChanging(string value);
    partial void OnbundleContainerChanged();
    partial void OnabortedManOIDChanging(string value);
    partial void OnabortedManOIDChanged();
    partial void OnabortedManTypeChanging(int value);
    partial void OnabortedManTypeChanged();
    partial void OnsysIntegratedWithChanging(int value);
    partial void OnsysIntegratedWithChanged();
    partial void OninsLevelOIDChanging(string value);
    partial void OninsLevelOIDChanged();
    partial void OndueDateChanging(System.Nullable<System.DateTime> value);
    partial void OndueDateChanged();
    partial void OnadditionalRulesChanging(int value);
    partial void OnadditionalRulesChanged();
    partial void OnlastNoticeTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnlastNoticeTimeChanged();
    partial void OnredefinableHeaderOIDChanging(string value);
    partial void OnredefinableHeaderOIDChanged();
    partial void OnmobilityProcessChanging(int value);
    partial void OnmobilityProcessChanged();
    partial void OnprocessModelChanging(string value);
    partial void OnprocessModelChanged();
    partial void OnisExistCriticalChanging(System.Nullable<int> value);
    partial void OnisExistCriticalChanged();
    #endregion
		
		public ProcessInstance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectVersion", DbType="Int NOT NULL")]
		public int objectVersion
		{
			get
			{
				return this._objectVersion;
			}
			set
			{
				if ((this._objectVersion != value))
				{
					this.OnobjectVersionChanging(value);
					this.SendPropertyChanging();
					this._objectVersion = value;
					this.SendPropertyChanged("objectVersion");
					this.OnobjectVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contextOID", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string contextOID
		{
			get
			{
				return this._contextOID;
			}
			set
			{
				if ((this._contextOID != value))
				{
					this.OncontextOIDChanging(value);
					this.SendPropertyChanging();
					this._contextOID = value;
					this.SendPropertyChanged("contextOID");
					this.OncontextOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currentState", DbType="Int NOT NULL")]
		public int currentState
		{
			get
			{
				return this._currentState;
			}
			set
			{
				if ((this._currentState != value))
				{
					this.OncurrentStateChanging(value);
					this.SendPropertyChanging();
					this._currentState = value;
					this.SendPropertyChanged("currentState");
					this.OncurrentStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invokeOrganizationUnitOID", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string invokeOrganizationUnitOID
		{
			get
			{
				return this._invokeOrganizationUnitOID;
			}
			set
			{
				if ((this._invokeOrganizationUnitOID != value))
				{
					this.OninvokeOrganizationUnitOIDChanging(value);
					this.SendPropertyChanging();
					this._invokeOrganizationUnitOID = value;
					this.SendPropertyChanged("invokeOrganizationUnitOID");
					this.OninvokeOrganizationUnitOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_requesterOID", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string requesterOID
		{
			get
			{
				return this._requesterOID;
			}
			set
			{
				if ((this._requesterOID != value))
				{
					this.OnrequesterOIDChanging(value);
					this.SendPropertyChanging();
					this._requesterOID = value;
					this.SendPropertyChanged("requesterOID");
					this.OnrequesterOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serialNumber", DbType="NVarChar(50)")]
		public string serialNumber
		{
			get
			{
				return this._serialNumber;
			}
			set
			{
				if ((this._serialNumber != value))
				{
					this.OnserialNumberChanging(value);
					this.SendPropertyChanging();
					this._serialNumber = value;
					this.SendPropertyChanged("serialNumber");
					this.OnserialNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isMain", DbType="Int NOT NULL")]
		public int isMain
		{
			get
			{
				return this._isMain;
			}
			set
			{
				if ((this._isMain != value))
				{
					this.OnisMainChanging(value);
					this.SendPropertyChanging();
					this._isMain = value;
					this.SendPropertyChanged("isMain");
					this.OnisMainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdTime", DbType="DateTime NOT NULL")]
		public System.DateTime createdTime
		{
			get
			{
				return this._createdTime;
			}
			set
			{
				if ((this._createdTime != value))
				{
					this.OncreatedTimeChanging(value);
					this.SendPropertyChanging();
					this._createdTime = value;
					this.SendPropertyChanged("createdTime");
					this.OncreatedTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_processInstanceName", DbType="NVarChar(100)")]
		public string processInstanceName
		{
			get
			{
				return this._processInstanceName;
			}
			set
			{
				if ((this._processInstanceName != value))
				{
					this.OnprocessInstanceNameChanging(value);
					this.SendPropertyChanging();
					this._processInstanceName = value;
					this.SendPropertyChanged("processInstanceName");
					this.OnprocessInstanceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_processDefinitionId", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string processDefinitionId
		{
			get
			{
				return this._processDefinitionId;
			}
			set
			{
				if ((this._processDefinitionId != value))
				{
					this.OnprocessDefinitionIdChanging(value);
					this.SendPropertyChanging();
					this._processDefinitionId = value;
					this.SendPropertyChanged("processDefinitionId");
					this.OnprocessDefinitionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relationalManOID", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string relationalManOID
		{
			get
			{
				return this._relationalManOID;
			}
			set
			{
				if ((this._relationalManOID != value))
				{
					this.OnrelationalManOIDChanging(value);
					this.SendPropertyChanging();
					this._relationalManOID = value;
					this.SendPropertyChanged("relationalManOID");
					this.OnrelationalManOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_defaultAssignmentType", DbType="Int NOT NULL")]
		public int defaultAssignmentType
		{
			get
			{
				return this._defaultAssignmentType;
			}
			set
			{
				if ((this._defaultAssignmentType != value))
				{
					this.OndefaultAssignmentTypeChanging(value);
					this.SendPropertyChanging();
					this._defaultAssignmentType = value;
					this.SendPropertyChanged("defaultAssignmentType");
					this.OndefaultAssignmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referContainerOID", DbType="Char(32)")]
		public string referContainerOID
		{
			get
			{
				return this._referContainerOID;
			}
			set
			{
				if ((this._referContainerOID != value))
				{
					this.OnreferContainerOIDChanging(value);
					this.SendPropertyChanging();
					this._referContainerOID = value;
					this.SendPropertyChanged("referContainerOID");
					this.OnreferContainerOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numOfNotification", DbType="Int NOT NULL")]
		public int numOfNotification
		{
			get
			{
				return this._numOfNotification;
			}
			set
			{
				if ((this._numOfNotification != value))
				{
					this.OnnumOfNotificationChanging(value);
					this.SendPropertyChanging();
					this._numOfNotification = value;
					this.SendPropertyChanged("numOfNotification");
					this.OnnumOfNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_referOrganizationUnitOID", DbType="Char(32)")]
		public string referOrganizationUnitOID
		{
			get
			{
				return this._referOrganizationUnitOID;
			}
			set
			{
				if ((this._referOrganizationUnitOID != value))
				{
					this.OnreferOrganizationUnitOIDChanging(value);
					this.SendPropertyChanging();
					this._referOrganizationUnitOID = value;
					this.SendPropertyChanged("referOrganizationUnitOID");
					this.OnreferOrganizationUnitOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abortComment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string abortComment
		{
			get
			{
				return this._abortComment;
			}
			set
			{
				if ((this._abortComment != value))
				{
					this.OnabortCommentChanging(value);
					this.SendPropertyChanging();
					this._abortComment = value;
					this.SendPropertyChanged("abortComment");
					this.OnabortCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abortable", DbType="Int NOT NULL")]
		public int abortable
		{
			get
			{
				return this._abortable;
			}
			set
			{
				if ((this._abortable != value))
				{
					this.OnabortableChanging(value);
					this.SendPropertyChanging();
					this._abortable = value;
					this.SendPropertyChanged("abortable");
					this.OnabortableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bundleContainer", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string bundleContainer
		{
			get
			{
				return this._bundleContainer;
			}
			set
			{
				if ((this._bundleContainer != value))
				{
					this.OnbundleContainerChanging(value);
					this.SendPropertyChanging();
					this._bundleContainer = value;
					this.SendPropertyChanged("bundleContainer");
					this.OnbundleContainerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abortedManOID", DbType="Char(32)")]
		public string abortedManOID
		{
			get
			{
				return this._abortedManOID;
			}
			set
			{
				if ((this._abortedManOID != value))
				{
					this.OnabortedManOIDChanging(value);
					this.SendPropertyChanging();
					this._abortedManOID = value;
					this.SendPropertyChanged("abortedManOID");
					this.OnabortedManOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abortedManType", DbType="Int NOT NULL")]
		public int abortedManType
		{
			get
			{
				return this._abortedManType;
			}
			set
			{
				if ((this._abortedManType != value))
				{
					this.OnabortedManTypeChanging(value);
					this.SendPropertyChanging();
					this._abortedManType = value;
					this.SendPropertyChanged("abortedManType");
					this.OnabortedManTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sysIntegratedWith", DbType="Int NOT NULL")]
		public int sysIntegratedWith
		{
			get
			{
				return this._sysIntegratedWith;
			}
			set
			{
				if ((this._sysIntegratedWith != value))
				{
					this.OnsysIntegratedWithChanging(value);
					this.SendPropertyChanging();
					this._sysIntegratedWith = value;
					this.SendPropertyChanged("sysIntegratedWith");
					this.OnsysIntegratedWithChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_insLevelOID", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string insLevelOID
		{
			get
			{
				return this._insLevelOID;
			}
			set
			{
				if ((this._insLevelOID != value))
				{
					this.OninsLevelOIDChanging(value);
					this.SendPropertyChanging();
					this._insLevelOID = value;
					this.SendPropertyChanged("insLevelOID");
					this.OninsLevelOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dueDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> dueDate
		{
			get
			{
				return this._dueDate;
			}
			set
			{
				if ((this._dueDate != value))
				{
					this.OndueDateChanging(value);
					this.SendPropertyChanging();
					this._dueDate = value;
					this.SendPropertyChanged("dueDate");
					this.OndueDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_additionalRules", DbType="Int NOT NULL")]
		public int additionalRules
		{
			get
			{
				return this._additionalRules;
			}
			set
			{
				if ((this._additionalRules != value))
				{
					this.OnadditionalRulesChanging(value);
					this.SendPropertyChanging();
					this._additionalRules = value;
					this.SendPropertyChanged("additionalRules");
					this.OnadditionalRulesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastNoticeTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastNoticeTime
		{
			get
			{
				return this._lastNoticeTime;
			}
			set
			{
				if ((this._lastNoticeTime != value))
				{
					this.OnlastNoticeTimeChanging(value);
					this.SendPropertyChanging();
					this._lastNoticeTime = value;
					this.SendPropertyChanged("lastNoticeTime");
					this.OnlastNoticeTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_redefinableHeaderOID", DbType="NChar(32)")]
		public string redefinableHeaderOID
		{
			get
			{
				return this._redefinableHeaderOID;
			}
			set
			{
				if ((this._redefinableHeaderOID != value))
				{
					this.OnredefinableHeaderOIDChanging(value);
					this.SendPropertyChanging();
					this._redefinableHeaderOID = value;
					this.SendPropertyChanged("redefinableHeaderOID");
					this.OnredefinableHeaderOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobilityProcess", DbType="Int NOT NULL")]
		public int mobilityProcess
		{
			get
			{
				return this._mobilityProcess;
			}
			set
			{
				if ((this._mobilityProcess != value))
				{
					this.OnmobilityProcessChanging(value);
					this.SendPropertyChanging();
					this._mobilityProcess = value;
					this.SendPropertyChanged("mobilityProcess");
					this.OnmobilityProcessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_processModel", DbType="NChar(4)")]
		public string processModel
		{
			get
			{
				return this._processModel;
			}
			set
			{
				if ((this._processModel != value))
				{
					this.OnprocessModelChanging(value);
					this.SendPropertyChanging();
					this._processModel = value;
					this.SendPropertyChanged("processModel");
					this.OnprocessModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isExistCritical", DbType="Int")]
		public System.Nullable<int> isExistCritical
		{
			get
			{
				return this._isExistCritical;
			}
			set
			{
				if ((this._isExistCritical != value))
				{
					this.OnisExistCriticalChanging(value);
					this.SendPropertyChanging();
					this._isExistCritical = value;
					this.SendPropertyChanged("isExistCritical");
					this.OnisExistCriticalChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocalRelevantData")]
	public partial class LocalRelevantData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _OID;
		
		private string _containerOID;
		
		private string _id;
		
		private int _objectVersion;
		
		private string _valueOID;
		
		private string _dataTypeOID;
		
    #region 擴充性方法定義
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOIDChanging(string value);
    partial void OnOIDChanged();
    partial void OncontainerOIDChanging(string value);
    partial void OncontainerOIDChanged();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnobjectVersionChanging(int value);
    partial void OnobjectVersionChanged();
    partial void OnvalueOIDChanging(string value);
    partial void OnvalueOIDChanged();
    partial void OndataTypeOIDChanging(string value);
    partial void OndataTypeOIDChanged();
    #endregion
		
		public LocalRelevantData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OID", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string OID
		{
			get
			{
				return this._OID;
			}
			set
			{
				if ((this._OID != value))
				{
					this.OnOIDChanging(value);
					this.SendPropertyChanging();
					this._OID = value;
					this.SendPropertyChanged("OID");
					this.OnOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_containerOID", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string containerOID
		{
			get
			{
				return this._containerOID;
			}
			set
			{
				if ((this._containerOID != value))
				{
					this.OncontainerOIDChanging(value);
					this.SendPropertyChanging();
					this._containerOID = value;
					this.SendPropertyChanged("containerOID");
					this.OncontainerOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_objectVersion", DbType="Int NOT NULL")]
		public int objectVersion
		{
			get
			{
				return this._objectVersion;
			}
			set
			{
				if ((this._objectVersion != value))
				{
					this.OnobjectVersionChanging(value);
					this.SendPropertyChanging();
					this._objectVersion = value;
					this.SendPropertyChanged("objectVersion");
					this.OnobjectVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_valueOID", DbType="Char(32)")]
		public string valueOID
		{
			get
			{
				return this._valueOID;
			}
			set
			{
				if ((this._valueOID != value))
				{
					this.OnvalueOIDChanging(value);
					this.SendPropertyChanging();
					this._valueOID = value;
					this.SendPropertyChanged("valueOID");
					this.OnvalueOIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dataTypeOID", DbType="Char(32) NOT NULL", CanBeNull=false)]
		public string dataTypeOID
		{
			get
			{
				return this._dataTypeOID;
			}
			set
			{
				if ((this._dataTypeOID != value))
				{
					this.OndataTypeOIDChanging(value);
					this.SendPropertyChanging();
					this._dataTypeOID = value;
					this.SendPropertyChanged("dataTypeOID");
					this.OndataTypeOIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
